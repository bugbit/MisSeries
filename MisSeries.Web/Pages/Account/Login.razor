@page "/login"
@inject TraktAccountServices TraktAccountSrv
@inject NavigationManager NavManager

@if (!string.IsNullOrEmpty(errorMessage))
{
    <h1>Login</h1>
    <h2>@errorMessage</h2>
}

@code
{
    [SupplyParameterFromQuery, Parameter] public string? Code { get; set; }
    [SupplyParameterFromQuery, Parameter] public string? ReturnUrl { get; set; }
    [SupplyParameterFromQuery, Parameter] public string? Error { get; set; }
    [SupplyParameterFromQuery, Parameter] public string? Error_description { get; set; }
    string? errorMessage = null;

    protected async override Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(Error) && !string.IsNullOrEmpty(Error_description))
        {
            errorMessage = $"{Error}. {Error_description}";
        }
        else if (!string.IsNullOrEmpty(Code))
        {
            try
            {
                await TraktAccountSrv.LoginAsync(Code, CancellationToken.None);

                if (!string.IsNullOrEmpty(ReturnUrl))
                    NavManager.NavigateTo(ReturnUrl, false);
            }
            catch (Exception ex)
            {
                errorMessage = ex.Message;
            }
        }
        await base.OnInitializedAsync();
    }
}